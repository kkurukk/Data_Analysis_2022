-- 실습 4-1. Equi Join 실습

-- [예제] 사원 테이블과 조직 테이블의 조인 SQL
SELECT TB_EMP.EMP_NAME, TB_EMP.ORG_CD,
	TB_ORG.ORG_CD, TB_ORG.ORG_NAME
FROM cslee.TB_EMP, cslee.TB_ORG
WHERE cslee.TB_EMP.ORG_CD = cslee.TB_ORG.ORG_CD;
/*
emp_name|org_cd|org_cd|org_name|
--------+------+------+--------+
김현광     |01    |01    |성공기업    |
이유섭     |02    |02    |경영기획본부 |
최명화     |03    |03    |리스크관리본부|
이지은     |04    |04    |영업본부    |
김형욱     |05    |05    |경영관리팀   |
김한빈     |05    |05    |경영관리팀   |
황예리     |05    |05    |경영관리팀   |
정은지     |05    |05    |경영관리팀   |
최계영     |06    |06    |정보시스템팀  |
이철환     |06    |06    |정보시스템팀  |
정민호     |06    |06    |정보시스템팀  |
김성근     |06    |06    |정보시스템팀  |
김홍주     |07    |07    |리스크관리팀  |
최석주     |07    |07    |리스크관리팀  |
김혁근     |07    |07    |리스크관리팀  |
장창우     |07    |07    |리스크관리팀  |
목경인     |08    |08    |영업1팀    |
이창일     |08    |08    |영업1팀    |
이경탁     |08    |08    |영업1팀    |
김진주     |08    |08    |영업1팀    |
한승훈     |09    |09    |영업2팀    |
홍현철     |09    |09    |영업2팀    |
김성두     |09    |09    |영업2팀    |
한영수     |09    |09    |영업2팀    |
안지혜     |10    |10    |영업3팀    |
이승범     |10    |10    |영업3팀    |
윤영현     |10    |10    |영업3팀    |
박경수     |10    |10    |영업3팀    |
유홍영     |10    |10    |영업3팀    |
 */

---------------------------------------------------------------------------------

-- [예제] 사원이름, 소속부서코드, 부서명(조직명), 직책을 출력하시오
SELECT TB_EMP.EMP_NO,
	TB_EMP.EMP_NAME,
	TB_EMP.ORG_CD,
	TB_ORG.ORG_NAME,
	TB_EMP.POSITION
FROM cslee.TB_EMP,
	cslee.TB_ORG
WHERE cslee.TB_EMP.ORG_CD = cslee.TB_ORG.ORG_CD; -- 조인컬럼
/*
emp_no|emp_name|org_cd|org_name|position|
------+--------+------+--------+--------+
  1001|김현광     |01    |성공기업    |대표이사    |
  1002|이유섭     |02    |경영기획본부  |본부장     |
  1003|최명화     |03    |리스크관리본부 |본부장     |
  1004|이지은     |04    |영업본부    |본부장     |
  1023|김형욱     |05    |경영관리팀   |사원      |
  1017|김한빈     |05    |경영관리팀   |대리      |
  1011|황예리     |05    |경영관리팀   |과장      |
  1005|정은지     |05    |경영관리팀   |팀장      |
  1024|최계영     |06    |정보시스템팀  |사원      |
  1018|이철환     |06    |정보시스템팀  |대리      |
  1012|정민호     |06    |정보시스템팀  |과장      |
  1006|김성근     |06    |정보시스템팀  |팀장      |
  1025|김홍주     |07    |리스크관리팀  |사원      |
  1019|최석주     |07    |리스크관리팀  |대리      |
  1013|김혁근     |07    |리스크관리팀  |과장      |
  1007|장창우     |07    |리스크관리팀  |팀장      |
  1026|목경인     |08    |영업1팀    |사원      |
  1020|이창일     |08    |영업1팀    |대리      |
  1014|이경탁     |08    |영업1팀    |과장      |
  1008|김진주     |08    |영업1팀    |팀장      |
  1027|한승훈     |09    |영업2팀    |사원      |
  1021|홍현철     |09    |영업2팀    |대리      |
  1015|김성두     |09    |영업2팀    |과장      |
  1009|한영수     |09    |영업2팀    |팀장      |
  1029|안지혜     |10    |영업3팀    |사원      |
  1028|이승범     |10    |영업3팀    |사원      |
  1022|윤영현     |10    |영업3팀    |대리      |
  1016|박경수     |10    |영업3팀    |과장      |
  1010|유홍영     |10    |영업3팀    |팀장      |
 */


---------------------------------------------------------------------------------

-- Alias 사용
SELECT E.EMP_NO,
	E.EMP_NAME,
	E.ORG_CD,
	O.ORG_NAME,
	E.POSITION
FROM cslee.TB_EMP AS E,
	cslee.TB_ORG AS O
WHERE E.ORG_CD = O.ORG_CD -- 조인컬럼 지정
AND E.POSITION = '팀장' -- 필터조건
ORDER BY O.ORG_NAME; -- 정렬
/*
emp_no|emp_name|org_cd|org_name|position|
------+--------+------+--------+--------+
  1005|정은지     |05    |경영관리팀   |팀장      |
  1007|장창우     |07    |리스크관리팀  |팀장      |
  1008|김진주     |08    |영업1팀    |팀장      |
  1009|한영수     |09    |영업2팀    |팀장      |
  1010|유홍영     |10    |영업3팀    |팀장      |
  1006|김성근     |06    |정보시스템팀  |팀장      |
 */

---------------------------------------------------------------------------------
-- 실습 4-2. 3개 이상 테이블 조인

-- [예제] 계좌번호, 고객명, 상품명, 계약금액, 관리자명을 출력한다.
SELECT A.ACCNO,
	C.CUST_NAME,
	P.PROD_NAME,
	A.CONT_AMT,
	E.EMP_NAME
FROM cslee.TB_ACCNT A, cslee.TB_CUST C, cslee.TB_PROD P, cslee.TB_EMP E
WHERE A.CUST_NO = C.CUST_NO
AND A.PROD_CD = P.PROD_CD
AND A.MANAGER = E.EMP_NO;
/*
accno |cust_name|prod_name|cont_amt|emp_name|
------+---------+---------+--------+--------+
105400|김윤태      |보통예금     |   49430|유홍영     |
105401|정유진      |신용대출     |   50850|한영수     |
105402|구성국      |일반대출     |   81297|김진주     |
105403|장철       |보통예금     |     211|이경탁     |
105404|홍영록      |종합통장대출   |   60251|홍현철     |
105405|김광엽      |정기적금     |   50997|유홍영     |
105406|관난희      |종합통장대출   |   69777|김진주     |
105407|박옥희      |정기적금     |    2431|유홍영     |
105408|오효진      |담보대출     |   46591|이경탁     |
105409|이영주      |보통예금     |   44996|한영수     |
105410|박성만      |학자금대출    |   81268|박경수     |
105411|나홍건      |주택자금대출   |   89610|김진주     |
105412|이순천      |담보대출     |   57497|김성두     |
105413|홍지환      |전세자금대출   |   33404|박경수     |
105414|최형윤      |담보대출     |   85817|안지혜     |
105415|최홍섭      |주택자금대출   |   58742|한승훈     |
105416|홍덕환      |담보대출     |   89224|한영수     |
105417|김영인      |정기예금     |   64455|박경수     |
105418|관난희      |전세자금대출   |   26897|이승범     |
*
* 생략, 200 row(s) fetched
*
 */

---------------------------------------------------------------------------------

-- [예제]사원별 급여와 어느 등급에 속하는지 알고 싶다는 요구사항에 대한 Non EQUI JOIN
SELECT E.EMP_NAME 사원명,
	E.SALARY 연봉,
	S.GRADE 급여등급
FROM cslee.TB_EMP E, cslee.TB_GRADE S
where E.SALARY
BETWEEN S.LOW_SAL AND S.HIGH_SAL;
/*
사원명|연봉       |급여등급|
---+---------+----+
김홍주| 32300000|   1|
안지혜| 39000000|   1|
홍현철| 56996000|   2|
윤영현| 55000000|   2|
김형욱| 51996000|   2|
최계영| 42996000|   2|
목경인| 41996000|   2|
한승훈| 49996000|   2|
이승범| 44996000|   2|
황예리| 72992000|   3|
정민호| 79992000|   3|
김혁근| 75996000|   3|
김성두| 77992000|   3|
김한빈| 70000000|   3|
이철환| 74996000|   3|
최석주| 68996000|   3|
이창일| 62996000|   3|
정은지| 87992000|   4|
김성근| 86000000|   4|
장창우| 83996000|   4|
김진주| 90996000|   4|
한영수| 88992000|   4|
유홍영| 85992000|   4|
이경탁| 82000000|   4|
박경수| 83996000|   4|
김현광|225996000|   5|
이유섭|145000000|   5|
최명화|132996000|   5|
이지은|220992000|   5|
 */

---------------------------------------------------------------------------------
-- 실습 4-3. 표준조인
-- 표준 조인(ANSI 표현법, ANSI 표현법으로 익히는 것이 좋음)

-- Inner Join

--[예제] 사원 번호와 사원 이름, 소속부서 코드와 소속부서 이름을 찾아본다.

--(1) WHERE 절 JOIN 조건

SELECT EMP.EMP_NO, EMP.EMP_NAME, ORG.ORG_NAME
FROM cslee.TB_EMP EMP, cslee.TB_ORG ORG
WHERE EMP.ORG_CD = ORG.ORG_CD;
/*
emp_no|emp_name|org_name|
------+--------+--------+
  1001|김현광     |성공기업    |
  1002|이유섭     |경영기획본부  |
  1003|최명화     |리스크관리본부 |
  1004|이지은     |영업본부    |
  1023|김형욱     |경영관리팀   |
  1017|김한빈     |경영관리팀   |
  1011|황예리     |경영관리팀   |
  1005|정은지     |경영관리팀   |
  1024|최계영     |정보시스템팀  |
  1018|이철환     |정보시스템팀  |
  1012|정민호     |정보시스템팀  |
  1006|김성근     |정보시스템팀  |
  1025|김홍주     |리스크관리팀  |
  1019|최석주     |리스크관리팀  |
  1013|김혁근     |리스크관리팀  |
  1007|장창우     |리스크관리팀  |
  1026|목경인     |영업1팀    |
  1020|이창일     |영업1팀    |
  1014|이경탁     |영업1팀    |
  1008|김진주     |영업1팀    |
  1027|한승훈     |영업2팀    |
  1021|홍현철     |영업2팀    |
  1015|김성두     |영업2팀    |
  1009|한영수     |영업2팀    |
  1029|안지혜     |영업3팀    |
  1028|이승범     |영업3팀    |
  1022|윤영현     |영업3팀    |
  1016|박경수     |영업3팀    |
  1010|유홍영     |영업3팀    |
 */

--(2) FROM 절 JOIN 조건

SELECT EMP.EMP_NO, EMP.EMP_NAME, ORG.ORG_NAME
FROM cslee.TB_EMP EMP
INNER JOIN cslee.TB_ORG ORG
ON EMP.ORG_CD = ORG.ORG_CD;
/*
emp_no|emp_name|org_name|
------+--------+--------+
  1001|김현광     |성공기업    |
  1002|이유섭     |경영기획본부  |
  1003|최명화     |리스크관리본부 |
  1004|이지은     |영업본부    |
  1023|김형욱     |경영관리팀   |
  1017|김한빈     |경영관리팀   |
  1011|황예리     |경영관리팀   |
  1005|정은지     |경영관리팀   |
  1024|최계영     |정보시스템팀  |
  1018|이철환     |정보시스템팀  |
  1012|정민호     |정보시스템팀  |
  1006|김성근     |정보시스템팀  |
  1025|김홍주     |리스크관리팀  |
  1019|최석주     |리스크관리팀  |
  1013|김혁근     |리스크관리팀  |
  1007|장창우     |리스크관리팀  |
  1026|목경인     |영업1팀    |
  1020|이창일     |영업1팀    |
  1014|이경탁     |영업1팀    |
  1008|김진주     |영업1팀    |
  1027|한승훈     |영업2팀    |
  1021|홍현철     |영업2팀    |
  1015|김성두     |영업2팀    |
  1009|한영수     |영업2팀    |
  1029|안지혜     |영업3팀    |
  1028|이승범     |영업3팀    |
  1022|윤영현     |영업3팀    |
  1016|박경수     |영업3팀    |
  1010|유홍영     |영업3팀    |
 */

--(3) INNER 키워드 생략
SELECT EMP.EMP_NO, EMP.EMP_NAME, ORG.ORG_NAME
FROM cslee.TB_EMP EMP
JOIN cslee.TB_ORG ORG
ON EMP.ORG_CD = ORG.ORG_CD;
/*
emp_no|emp_name|org_name|
------+--------+--------+
  1001|김현광     |성공기업    |
  1002|이유섭     |경영기획본부  |
  1003|최명화     |리스크관리본부 |
  1004|이지은     |영업본부    |
  1023|김형욱     |경영관리팀   |
  1017|김한빈     |경영관리팀   |
  1011|황예리     |경영관리팀   |
  1005|정은지     |경영관리팀   |
  1024|최계영     |정보시스템팀  |
  1018|이철환     |정보시스템팀  |
  1012|정민호     |정보시스템팀  |
  1006|김성근     |정보시스템팀  |
  1025|김홍주     |리스크관리팀  |
  1019|최석주     |리스크관리팀  |
  1013|김혁근     |리스크관리팀  |
  1007|장창우     |리스크관리팀  |
  1026|목경인     |영업1팀    |
  1020|이창일     |영업1팀    |
  1014|이경탁     |영업1팀    |
  1008|김진주     |영업1팀    |
  1027|한승훈     |영업2팀    |
  1021|홍현철     |영업2팀    |
  1015|김성두     |영업2팀    |
  1009|한영수     |영업2팀    |
  1029|안지혜     |영업3팀    |
  1028|이승범     |영업3팀    |
  1022|윤영현     |영업3팀    |
  1016|박경수     |영업3팀    |
  1010|유홍영     |영업3팀    |
 */

---------------------------------------------------------------------------------

-- FROM 절 JOIN 조건

--[예제] 계좌 테이블에서 계좌번호와, 고객번호, 고객의 명을 고객테이블과 조인하여 찾아본다.
SELECT ACC.ACCNO, ACC.CUST_NO, CUST.CUST_NAME
FROM cslee.TB_ACCNT ACC
	INNER JOIN cslee.TB_CUST CUST
ON (CUST.CUST_NO = ACC.CUST_NO);
/*
accno |cust_no|cust_name|
------+-------+---------+
105400|  10115|김윤태      |
105401|  10183|정유진      |
105402|  10027|구성국      |
105403|  10015|장철       |
105404|  10044|홍영록      |
105405|  10074|김광엽      |
105406|  10019|관난희      |
105407|  10055|박옥희      |
105408|  10112|오효진      |
105409|  10133|이영주      |
105410|  10166|박성만      |
105411|  10150|나홍건      |
105412|  10184|이순천      |
105413|  10057|홍지환      |
105414|  10165|최형윤      |
105415|  10021|최홍섭      |
*
* 생략, 200 row(s) fetched
 */

---------------------------------------------------------------------------------

--FROM 절 JOIN 조건

--[예제] 조직코드 10인 부서의 소속 사원 이름 및 소속 부서 코드, 부서 코드, 부서 이름을 찾아본다.
SELECT E.EMP_NAME, E.ORG_CD, O.ORG_CD, O.ORG_NAME
FROM cslee.TB_EMP E
JOIN cslee.TB_ORG O
	ON (E.ORG_CD = O.ORG_CD)
WHERE E.ORG_CD = '10';
/*
emp_name|org_cd|org_cd|org_name|
--------+------+------+--------+
유홍영     |10    |10    |영업3팀    |
박경수     |10    |10    |영업3팀    |
윤영현     |10    |10    |영업3팀    |
이승범     |10    |10    |영업3팀    |
안지혜     |10    |10    |영업3팀    |
 */

---------------------------------------------------------------------------------

-- ON조건절- 다중조인

-- (1) WHERE 절 JOIN 조건
SELECT A.ACCNO 계좌번호, C.CUST_NAME 고객명, P.PROD_NAME 상품명
	, A.CONT_AMT 계약금액, E.EMP_NAME 담당자명
FROM cslee.TB_ACCNT A, cslee.TB_CUST C, cslee.TB_PROD P, cslee.TB_EMP E
WHERE A.CUST_NO = C.CUST_NO
AND A.PROD_CD = P.PROD_CD
AND A.MANAGER = E.EMP_NO;
/*
계좌번호  |고객명|상품명   |계약금액 |담당자명|
------+---+------+-----+----+
105400|김윤태|보통예금  |49430|유홍영 |
105401|정유진|신용대출  |50850|한영수 |
105402|구성국|일반대출  |81297|김진주 |
105403|장철 |보통예금  |  211|이경탁 |
105404|홍영록|종합통장대출|60251|홍현철 |
105405|김광엽|정기적금  |50997|유홍영 |
105406|관난희|종합통장대출|69777|김진주 |
105407|박옥희|정기적금  | 2431|유홍영 |
105408|오효진|담보대출  |46591|이경탁 |
105409|이영주|보통예금  |44996|한영수 |
105410|박성만|학자금대출 |81268|박경수 |
105411|나홍건|주택자금대출|89610|김진주 |
105412|이순천|담보대출  |57497|김성두 |
105413|홍지환|전세자금대출|33404|박경수 |
*
* 생략, 200 row(s) fetched
 */

-- (2) ON 절 JOIN 조건
SELECT A.ACCNO 계좌번호, C.CUST_NAME 고객명, P.PROD_NAME 상품명
	, A.CONT_AMT 계약번호, E.EMP_NAME 담당자명
FROM cslee.TB_ACCNT A
INNER JOIN cslee.TB_CUST C ON A.CUST_NO = C.CUST_NO
INNER JOIN cslee.TB_PROD P ON A.PROD_CD = P.PROD_CD
INNER JOIN cslee.TB_EMP E ON A.MANAGER = E.EMP_NO;
/*
계좌번호  |고객명|상품명   |계약번호 |담당자명|
------+---+------+-----+----+
105400|김윤태|보통예금  |49430|유홍영 |
105401|정유진|신용대출  |50850|한영수 |
105402|구성국|일반대출  |81297|김진주 |
105403|장철 |보통예금  |  211|이경탁 |
105404|홍영록|종합통장대출|60251|홍현철 |
105405|김광엽|정기적금  |50997|유홍영 |
105406|관난희|종합통장대출|69777|김진주 |
105407|박옥희|정기적금  | 2431|유홍영 |
105408|오효진|담보대출  |46591|이경탁 |
105409|이영주|보통예금  |44996|한영수 |
105410|박성만|학자금대출 |81268|박경수 |
105411|나홍건|주택자금대출|89610|김진주 |
105412|이순천|담보대출  |57497|김성두 |
105413|홍지환|전세자금대출|33404|박경수 |
*
* 생략, 200 row(s) fetched
 */

---------------------------------------------------------------------------------

-- CROSS 조인
select count(emp_name) from cslee.tb_emp;
/*
count|
-----+
   29|
 */

select count(org_name) from cslee.tb_org;
/*
count|
-----+
   10|
 */

SELECT E.EMP_NAME, O.ORG_NAME
FROM cslee.TB_EMP E CROSS JOIN cslee.TB_ORG O
ORDER BY EMP_NAME;
/*
emp_name|org_name|
--------+--------+
김성근     |영업1팀    |
김성근     |정보시스템팀  |
김성근     |성공기업    |
김성근     |리스크관리팀  |
김성근     |영업3팀    |
김성근     |영업본부    |
김성근     |영업2팀    |
김성근     |경영관리팀   |
김성근     |경영기획본부  |
김성근     |리스크관리본부 |
김성두     |경영기획본부  |
김성두     |리스크관리본부 |
김성두     |리스크관리팀  |
김성두     |정보시스템팀  |
김성두     |영업본부    |
김성두     |경영관리팀   |
김성두     |성공기업    |
김성두     |영업3팀    |
김성두     |영업1팀    |
김성두     |영업2팀    |
김진주     |경영관리팀   |
김진주     |영업3팀    |
김진주     |성공기업    |
김진주     |영업2팀    |
김진주     |영업1팀    |
*
* 생략, 200 row(s) fetched
 */


select count(e.emp_name)
FROM cslee.TB_EMP E CROSS JOIN cslee.TB_ORG O;
/*
count|
-----+
  290|
 */

---------------------------------------------------------------------------------

-- Left Outer Join 조인(몇개의 데이터가 나올지 미리 예측해보세요)

-- [예제] 직원중에 아직 부서배정이 안된 사원도 있다. 사원(TB_EMP)과 조직(TB_ORG)을 JOIN하되 부서배정이 안된 사원의 정보도 같이 출력하도록 한다.
SELECT E.EMP_NO 사번, E.EMP_NAME 사원명,
	E.POSITION 직책, O.ORG_NAME 부서명
FROM cslee.TB_EMP E
LEFT OUTER JOIN cslee.TB_ORG O
	ON E.ORG_CD = O.ORG_CD
WHERE E.POSITION = '사원';
/*
사번  |사원명|직책|부서명   |
----+---+--+------+
1023|김형욱|사원|경영관리팀 |
1024|최계영|사원|정보시스템팀|
1025|김홍주|사원|리스크관리팀|
1026|목경인|사원|영업1팀  |
1027|한승훈|사원|영업2팀  |
1029|안지혜|사원|영업3팀  |
1028|이승범|사원|영업3팀  |
 */

---------------------------------------------------------------------------------

-- Right Outer Join

--[예제] 이전 예제에서 LEFT JOIN을 OUTER JOIN으로 표현한다.
SELECT E.EMP_NO 사번, E.EMP_NAME 사원명, E.POSITION 직책, O.ORG_NAME 부서명
FROM cslee.TB_ORG O
RIGHT OUTER JOIN cslee.TB_EMP E
	ON E.ORG_CD = O.ORG_CD
WHERE E.POSITION = '사원';
/*
사번  |사원명|직책|부서명   |
----+---+--+------+
1023|김형욱|사원|경영관리팀 |
1024|최계영|사원|정보시스템팀|
1025|김홍주|사원|리스크관리팀|
1026|목경인|사원|영업1팀  |
1027|한승훈|사원|영업2팀  |
1029|안지혜|사원|영업3팀  |
1028|이승범|사원|영업3팀  |
 */

---------------------------------------------------------------------------------

-- Full Outer Join

SELECT A.ORG_CD, A.ORG_NAME, B.ORG_CD, B.ORG_NAME
FROM cslee.TB_ORG A
FULL OUTER JOIN cslee.TB_ORG B
	ON A.ORG_CD=B.ORG_CD;
/*
org_cd|org_name|org_cd|org_name|
------+--------+------+--------+
01    |성공기업    |01    |성공기업    |
02    |경영기획본부  |02    |경영기획본부  |
03    |리스크관리본부 |03    |리스크관리본부 |
04    |영업본부    |04    |영업본부    |
05    |경영관리팀   |05    |경영관리팀   |
06    |정보시스템팀  |06    |정보시스템팀  |
07    |리스크관리팀  |07    |리스크관리팀  |
08    |영업1팀    |08    |영업1팀    |
09    |영업2팀    |09    |영업2팀    |
10    |영업3팀    |10    |영업3팀    |
 */

SELECT A.ORG_CD, A.ORG_NAME, B.ORG_CD, B.ORG_NAME
FROM cslee.TB_ORG A
LEFT OUTER JOIN cslee.TB_ORG B
	ON A.ORG_CD = B.ORG_CD
UNION
SELECT A.ORG_CD, A.ORG_NAME, B.ORG_CD, B.ORG_NAME
from cslee.TB_ORG A
RIGHT OUTER JOIN cslee.TB_ORG B
	ON A.ORG_CD = B.ORG_CD;
/*
org_cd|org_name|org_cd|org_name|
------+--------+------+--------+
01    |성공기업    |01    |성공기업    |
10    |영업3팀    |10    |영업3팀    |
08    |영업1팀    |08    |영업1팀    |
02    |경영기획본부  |02    |경영기획본부  |
04    |영업본부    |04    |영업본부    |
06    |정보시스템팀  |06    |정보시스템팀  |
05    |경영관리팀   |05    |경영관리팀   |
03    |리스크관리본부 |03    |리스크관리본부 |
09    |영업2팀    |09    |영업2팀    |
07    |리스크관리팀  |07    |리스크관리팀  |
*/

